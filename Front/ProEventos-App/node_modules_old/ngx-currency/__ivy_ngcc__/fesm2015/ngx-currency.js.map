{"version":3,"file":"ngx-currency.js","sources":["ngx-currency/src/currency-mask.config.ts","ngx-currency/src/input.manager.ts","ngx-currency/src/input.service.ts","ngx-currency/src/input.handler.ts","ngx-currency/src/currency-mask.directive.ts","ngx-currency/src/currency-mask.module.ts","ngx-currency/ngx-currency.ts"],"names":[],"mappings":"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","sourcesContent":["import {InjectionToken} from \"@angular/core\";\n\nexport interface CurrencyMaskConfig {\n  align: string;\n  allowNegative: boolean;\n  allowZero: boolean;\n  decimal: string;\n  precision: number;\n  prefix: string;\n  suffix: string;\n  thousands: string;\n  nullable: boolean;\n  min?: number;\n  max?: number;\n  inputMode? : CurrencyMaskInputMode;\n}\n\nexport enum CurrencyMaskInputMode {\n  FINANCIAL,\n  NATURAL,\n}\n\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");\n","export class InputManager {\n\n    private _storedRawValue: string;\n\n    constructor(private htmlInputElement: any) {\n    }\n\n    setCursorAt(position: number): void {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        } else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n\n    get canInputMoreNumbers(): boolean {\n        let onlyNumbers = this.rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n        let haventReachedMaxLength = !(onlyNumbers.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\n                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n\n    get inputSelection(): any {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        } else {\n            let range = (<any>document).selection.createRange();\n\n            if (range && range.parentElement() == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                } else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    } else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n\n    get rawValue(): string {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n\n    set rawValue(value: string) {\n        this._storedRawValue = value;\n\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n\n    get storedRawValue(): string {\n        return this._storedRawValue || '';\n    }\n}\n","import { InputManager } from \"./input.manager\";\nimport { CurrencyMaskConfig, CurrencyMaskInputMode } from \"./currency-mask.config\";\n\nexport class InputService {\n    private SINGLE_DIGIT_REGEX: RegExp = new RegExp(/^[0-9\\u0660-\\u0669\\u06F0-\\u06F9]$/);\n    private ONLY_NUMBERS_REGEX: RegExp = new RegExp(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g);\n\n    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();\n\n    initialize() {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    }\n\n    inputManager: InputManager;\n\n    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize()\n    }\n\n    addNumber(keyCode: number): void {\n        const {decimal, precision, inputMode} = this.options;\n        let keyChar = String.fromCharCode(keyCode);\n        const isDecimalChar = keyChar === this.options.decimal;\n\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, keyChar);\n            let selectionStart:number = undefined;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && precision > 0) {\n                selectionStart = this.rawValue.indexOf(decimal);\n                if (isDecimalChar) {\n                    selectionStart++;\n                }\n            }\n            this.updateFieldValue(selectionStart);\n        } else {\n            let selectionStart = this.inputSelection.selectionStart;\n            let selectionEnd = this.inputSelection.selectionEnd;\n            const rawValueStart = this.rawValue.substring(0, selectionStart);\n            let rawValueEnd = this.rawValue.substring(selectionEnd, this.rawValue.length);\n\n            // In natural mode, replace decimals instead of shifting them.\n            const inDecimalPortion = rawValueStart.indexOf(decimal) !== -1;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && inDecimalPortion && selectionStart === selectionEnd) {\n              rawValueEnd = rawValueEnd.substring(1);\n            }\n\n            const newValue = rawValueStart + keyChar + rawValueEnd;\n            let nextSelectionStart = selectionStart + 1;\n            const isDecimalOrThousands = isDecimalChar || keyChar === this.options.thousands;\n            if (isDecimalOrThousands && keyChar === rawValueEnd[0]) {\n                // If the cursor is just before the decimal or thousands separator and the user types the\n                // decimal or thousands separator, move the cursor past it.\n                nextSelectionStart++;\n            } else if (!this.SINGLE_DIGIT_REGEX.test(keyChar)) {\n                // Ignore other non-numbers.\n                return;\n            }\n\n            this.rawValue = newValue;\n            this.updateFieldValue(nextSelectionStart);\n        }\n    }\n\n    applyMask(isNumber: boolean, rawValue: string, disablePadAndTrim = false): string {\n        let {allowNegative, decimal, precision, prefix, suffix, thousands, min, max, inputMode} = this.options;\n\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n\n        if (!onlyNumbers && rawValue !== decimal) {\n            return \"\";\n        }\n\n        if (inputMode === CurrencyMaskInputMode.NATURAL && !isNumber && !disablePadAndTrim) {\n            rawValue = this.padOrTrimPrecision(rawValue);\n            onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n        }\n\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n            .replace(/^\\u0660*/g, \"\")\n            .replace(/^\\u06F0*/g, \"\")\n            .replace(/^0*/g, \"\");\n\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        let integerValue = parseInt(integerPart);\n\n        integerPart = integerPart.replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n        if (thousands && integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        let decimalValue = parseInt(decimalPart) || 0;\n\n        let isNegative = rawValue.indexOf(\"-\") > -1;\n\n        // Ensure max is at least as large as min.\n        max = (this.isNullOrUndefined(max) || this.isNullOrUndefined(min)) ? max : Math.max(max, min);\n\n        // Ensure precision number works well with more than 2 digits\n        // 23 / 100... 233 / 1000 and so on\n        const divideBy = Number('1'.padEnd(precision + 1, '0'));\n        \n        // Restrict to the min and max values.\n        let newValue = integerValue + (decimalValue / divideBy);\n\n        newValue = isNegative ? -newValue : newValue;\n        if (!this.isNullOrUndefined(max) && newValue > max) {\n            return this.applyMask(true, max + '');\n        } else if (!this.isNullOrUndefined(min) && newValue < min) {\n            return this.applyMask(true, min + '');\n        }\n\n        if (precision > 0) {\n            if (newRawValue == \"0\" && decimalPart.length < precision) {\n                newRawValue += decimal + \"0\".repeat(precision - 1) + decimalPart;\n            } else {\n                newRawValue += decimal + decimalPart;\n            }\n        }\n\n        let isZero = newValue == 0;\n        let operator = (isNegative && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n\n    padOrTrimPrecision(rawValue: string): string {\n        let {decimal, precision} = this.options;\n\n        let decimalIndex = rawValue.lastIndexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = rawValue.length;\n            rawValue += decimal;\n        }\n\n        let decimalPortion = rawValue.substring(decimalIndex).replace(this.ONLY_NUMBERS_REGEX, \"\");\n        const actualPrecision = decimalPortion.length;\n        if (actualPrecision < precision) {\n            for (let i = actualPrecision; i < precision; i++) {\n                decimalPortion += '0';\n            }\n        } else if (actualPrecision > precision) {\n            decimalPortion = decimalPortion.substring(0, decimalPortion.length + precision - actualPrecision);\n        }\n\n        return rawValue.substring(0, decimalIndex) + decimal + decimalPortion;\n    }\n\n    clearMask(rawValue: string): number {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n\n        this.PER_AR_NUMBER.forEach((val: string, key: string) => {\n            const re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    }\n\n    changeToNegative(): void {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            // Apply the mask to ensure the min and max values are enforced.\n            this.rawValue = this.applyMask(false, \"-\" + this.rawValue);\n        }\n    }\n\n    changeToPositive(): void {\n        // Apply the mask to ensure the min and max values are enforced.\n        this.rawValue = this.applyMask(false, this.rawValue.replace(\"-\", \"\"));\n    }\n\n    removeNumber(keyCode: number): void {\n        let {decimal, thousands, prefix, suffix, inputMode} = this.options;\n\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n\n        const suffixStart = this.rawValue.length - suffix.length;\n        selectionEnd = Math.min(suffixStart, Math.max(selectionEnd, prefix.length));\n        selectionStart = Math.min(suffixStart, Math.max(selectionStart, prefix.length));\n\n        // Check if selection was entirely in the prefix or suffix. \n        if (selectionStart === selectionEnd &&\n            this.inputSelection.selectionStart !== this.inputSelection.selectionEnd) {\n            this.updateFieldValue(selectionStart);\n            return;\n        }\n\n        let decimalIndex = this.rawValue.indexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = this.rawValue.length;\n        }\n\n        let shiftSelection = 0;\n        let insertChars = '';\n        const isCursorInDecimals = decimalIndex < selectionEnd;\n        const isCursorImmediatelyAfterDecimalPoint = decimalIndex + 1 === selectionEnd;\n        if (selectionEnd === selectionStart) {\n            if (keyCode == 8) {\n                if (selectionStart <= prefix.length) {\n                    return;\n                }\n                selectionStart--;\n\n                // If previous char isn't a number, go back one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart--;\n                }\n\n                // In natural mode, jump backwards when in decimal portion of number.\n                if (inputMode === CurrencyMaskInputMode.NATURAL && isCursorInDecimals) {\n                    shiftSelection = -1;\n                    // when removing a single whole number, replace it with 0\n                    if (isCursorImmediatelyAfterDecimalPoint && this.value < 10 && this.value > -10) {\n                        insertChars += '0';\n                    }\n                }\n            } else if (keyCode == 46 || keyCode == 63272) {\n                if (selectionStart === suffixStart) {\n                    return;\n                }\n                selectionEnd++;\n\n                // If next char isn't a number, go one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart++;\n                    selectionEnd++;\n                }\n            }\n        }\n\n        // In natural mode, replace decimals with 0s.\n        if (inputMode === CurrencyMaskInputMode.NATURAL && selectionStart > decimalIndex) {\n            const replacedDecimalCount = selectionEnd - selectionStart;\n            for (let i = 0; i < replacedDecimalCount; i++) {\n                insertChars += '0';\n            }\n        }\n\n        let selectionFromEnd = this.rawValue.length - selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + insertChars + this.rawValue.substring(selectionEnd);\n\n        // Remove leading thousand separator from raw value.\n        const startChar = this.rawValue.substr(prefix.length, 1);\n        if (startChar === thousands) {\n            this.rawValue = this.rawValue.substring(0, prefix.length) + this.rawValue.substring(prefix.length + 1);\n            selectionFromEnd = Math.min(selectionFromEnd, this.rawValue.length - prefix.length);\n        }\n\n        this.updateFieldValue(this.rawValue.length - selectionFromEnd + shiftSelection, true);\n    }\n\n    updateFieldValue(selectionStart?: number, disablePadAndTrim = false): void {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\", disablePadAndTrim);\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        selectionStart = Math.max(this.options.prefix.length, Math.min(selectionStart, this.rawValue.length - this.options.suffix.length));\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n\n    updateOptions(options: any): void {\n        let value: number = this.value;\n        this.options = options;\n        this.value = value;\n    }\n\n    prefixLength(): any {\n        return this.options.prefix.length;\n    }\n\n    suffixLength(): any {\n        return this.options.suffix.length;\n    }\n\n    isNullable() {\n        return this.options.nullable;\n    }\n\n    get canInputMoreNumbers(): boolean {\n        return this.inputManager.canInputMoreNumbers;\n    }\n\n    get inputSelection(): any {\n        return this.inputManager.inputSelection;\n    }\n\n    get rawValue(): string {\n        return this.inputManager.rawValue;\n    }\n\n    set rawValue(value: string) {\n        this.inputManager.rawValue = value;\n    }\n\n    get storedRawValue(): string {\n        return this.inputManager.storedRawValue;\n    }\n\n    get value(): number {\n        return this.clearMask(this.rawValue);\n    }\n\n    set value(value: number) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n\n    private isNullOrUndefined(value: any) {\n        return value === null || value === undefined;\n    }\n}\n","import {InputService} from \"./input.service\";\n\nexport class InputHandler {\n\n    private inputService: InputService;\n    private onModelChange: Function;\n    private onModelTouched: Function;\n\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n\n    handleCut(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n\n    handleInput(event: any): void {\n        let selectionStart = this.inputService.inputSelection.selectionStart;\n        let keyCode = this.inputService.rawValue.charCodeAt(selectionStart - 1);\n        let rawValueLength = this.inputService.rawValue.length;\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n\n        if (Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.inputService.updateFieldValue(selectionStart);\n            this.onModelChange(this.inputService.value);\n            return;\n        }\n\n        // Restore the old value.\n        this.inputService.rawValue = this.inputService.storedRawValue;\n\n        if (rawValueLength < storedRawValueLength) {\n            // Chrome Android seems to move the cursor in response to a backspace AFTER processing the\n            // input event, so we need to wrap this in a timeout.\n            this.timer(() => {\n                // Move the cursor to just after the deleted value.\n                this.inputService.updateFieldValue(selectionStart + 1);\n\n                // Then backspace it.\n                this.inputService.removeNumber(8);\n                this.onModelChange(this.inputService.value);  \n            }, 0);\n        }\n\n        if (rawValueLength > storedRawValueLength) {\n            // Move the cursor to just before the new value.\n            this.inputService.updateFieldValue(selectionStart - 1);\n\n            // Process the character like a keypress.\n            this.handleKeypressImpl(keyCode);\n        }\n    }\n\n    handleKeydown(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n\n            if (this.inputService.inputSelection.selectionStart <= this.inputService.prefixLength() &&\n                this.inputService.inputSelection.selectionEnd >= this.inputService.rawValue.length - this.inputService.suffixLength()) {\n                this.clearValue();\n            } else {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n        }\n    }\n\n    clearValue() {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeypress(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        event.preventDefault();\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n\n        this.handleKeypressImpl(keyCode);\n    }\n\n    private handleKeypressImpl(keyCode: number): void {\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(null);\n                    }\n\n                    this.inputService.addNumber(keyCode);\n                }\n                break;\n        }\n\n        this.onModelChange(this.inputService.value);\n    }\n\n    handlePaste(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n\n    updateOptions(options: any): void {\n        this.inputService.updateOptions(options);\n    }\n\n    getOnModelChange(): Function {\n        return this.onModelChange;\n    }\n\n    setOnModelChange(callbackFunction: Function): void {\n        this.onModelChange = callbackFunction;\n    }\n\n    getOnModelTouched(): Function {\n        return this.onModelTouched;\n    }\n\n    setOnModelTouched(callbackFunction: Function) {\n        this.onModelTouched = callbackFunction;\n    }\n\n    setValue(value: number): void {\n        this.inputService.value = value;\n    }\n\n    /**\n     * Passthrough to setTimeout that can be stubbed out in tests.\n     */\n    private timer(callback: () => void, delayMillis: number) {\n        setTimeout(callback, delayMillis);\n    }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Input,\n  OnInit,\n  Optional\n} from \"@angular/core\";\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {CurrencyMaskConfig, CURRENCY_MASK_CONFIG, CurrencyMaskInputMode} from \"./currency-mask.config\";\nimport {InputHandler} from \"./input.handler\";\n\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CurrencyMaskDirective),\n  multi: true,\n};\n\n@Directive({\n    selector: \"[currencyMask]\",\n    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\n})\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\n\n  @Input() options: Partial<CurrencyMaskConfig> = {};\n\n  public inputHandler: InputHandler;\n  public keyValueDiffer: KeyValueDiffer<any, any>;\n\n  public optionsTemplate: CurrencyMaskConfig = {\n      align: \"right\",\n      allowNegative: true,\n      allowZero: true,\n      decimal: \".\",\n      precision: 2,\n      prefix: \"$ \",\n      suffix: \"\",\n      thousands: \",\",\n      nullable: false,\n      inputMode: CurrencyMaskInputMode.FINANCIAL\n  };\n\n  constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,\n                                                        private elementRef: ElementRef,\n                                                        private keyValueDiffers: KeyValueDiffers) {\n    if (currencyMaskConfig) {\n        this.optionsTemplate = currencyMaskConfig;\n    }\n\n    this.keyValueDiffer = keyValueDiffers.find({}).create();\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.textAlign = this.options && this.options.align ? this.options.align : this.optionsTemplate.align;\n  }\n\n  ngDoCheck() {\n    if (this.keyValueDiffer.diff(this.options)) {\n      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\n    }\n  }\n\n  ngOnInit() {\n    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\n  }\n\n  @HostListener(\"blur\", [\"$event\"])\n  handleBlur(event: any) {\n    this.inputHandler.getOnModelTouched().apply(event);\n  }\n\n  @HostListener(\"cut\", [\"$event\"])\n  handleCut(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleCut(event);\n    }\n  }\n\n  @HostListener(\"input\", [\"$event\"])\n  handleInput(event: any) {\n    if (this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleInput(event);\n    }\n  }\n\n  @HostListener(\"keydown\", [\"$event\"])\n  handleKeydown(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleKeydown(event);\n    }\n  }\n\n  @HostListener(\"keypress\", [\"$event\"])\n  handleKeypress(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleKeypress(event);\n    }\n  }\n\n  @HostListener(\"paste\", [\"$event\"])\n  handlePaste(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handlePaste(event);\n    }\n  }\n\n  @HostListener(\"drop\", [\"$event\"])\n  handleDrop(event: any) {\n    if (!this.isChromeAndroid()) {\n      event.preventDefault();\n    }\n  }\n\n  isChromeAndroid(): boolean {\n    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n  }\n\n  isReadOnly(): boolean {\n    return this.elementRef.nativeElement.hasAttribute('readonly')\n  }\n\n  registerOnChange(callbackFunction: Function): void {\n    this.inputHandler.setOnModelChange(callbackFunction);\n  }\n\n  registerOnTouched(callbackFunction: Function): void {\n    this.inputHandler.setOnModelTouched(callbackFunction);\n  }\n\n  setDisabledState(value: boolean): void {\n    this.elementRef.nativeElement.disabled = value;\n  }\n\n  writeValue(value: number): void {\n    this.inputHandler.setValue(value);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CurrencyMaskDirective} from \"./currency-mask.directive\";\nimport {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from \"./currency-mask.config\";\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [ CurrencyMaskDirective ],\n  exports: [ CurrencyMaskDirective ]\n})\nexport class NgxCurrencyModule {\n  static forRoot(config: CurrencyMaskConfig): ModuleWithProviders<NgxCurrencyModule> {\n    return {\n      ngModule: NgxCurrencyModule,\n      providers: [{\n        provide: CURRENCY_MASK_CONFIG,\n        useValue: config,\n      }]\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}