{"version":3,"file":"currency-mask.directive.d.ts","sources":["currency-mask.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, DoCheck, ElementRef, KeyValueDiffer, KeyValueDiffers, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { CurrencyMaskConfig } from \"./currency-mask.config\";\nimport { InputHandler } from \"./input.handler\";\nexport declare const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any;\nexport declare class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\n    private currencyMaskConfig;\n    private elementRef;\n    private keyValueDiffers;\n    options: Partial<CurrencyMaskConfig>;\n    inputHandler: InputHandler;\n    keyValueDiffer: KeyValueDiffer<any, any>;\n    optionsTemplate: CurrencyMaskConfig;\n    constructor(currencyMaskConfig: CurrencyMaskConfig, elementRef: ElementRef, keyValueDiffers: KeyValueDiffers);\n    ngAfterViewInit(): void;\n    ngDoCheck(): void;\n    ngOnInit(): void;\n    handleBlur(event: any): void;\n    handleCut(event: any): void;\n    handleInput(event: any): void;\n    handleKeydown(event: any): void;\n    handleKeypress(event: any): void;\n    handlePaste(event: any): void;\n    handleDrop(event: any): void;\n    isChromeAndroid(): boolean;\n    isReadOnly(): boolean;\n    registerOnChange(callbackFunction: Function): void;\n    registerOnTouched(callbackFunction: Function): void;\n    setDisabledState(value: boolean): void;\n    writeValue(value: number): void;\n}\n"]}